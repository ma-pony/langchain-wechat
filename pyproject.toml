[tool.poetry]
name = "langchain-wechat"
version = "0.1.0"
description = ""
authors = ["Pony.Ma <mtf201013@gmail.com>"]
readme = "README.md"
license = "MIT"
packages = [
    { include = "src", from = "." }
]


[tool.poetry.dependencies]
python = "^3.10"
langchain = "^0.1.14"
langchain-openai = "^0.0.8"
pydantic-settings = "^2.2.1"
fastapi = "^0.110.0"
uvicorn = "^0.27.1"
loguru = "^0.7.2"
qrcode = { extras = ["pil"], version = "^7.4.2" }
pyqrcode = "^1.2.1"
redis = "^5.0.3"
langchainhub = "^0.1.15"
duckduckgo-search = "^5.1.0"
httpx = {extras = ["socks"], version = "^0.27.0"}


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "src/dependencies/itchat/**/*.py",
]

line-length = 120

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
]
ignore = []


[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403", "E501"]
"main.py" = ["E501"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
